<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="374" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="357.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="357.00"> </text><svg id="frames" x="10" width="1180" total_samples="8274"><g><title>dyld`dyld4::LibSystemHelpersWrapper::exit (1 samples, 0.01%)</title><rect x="0.0000%" y="293" width="0.0121%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="303.50"></text></g><g><title>libdyld.dylib`dyld4::LibSystemHelpers::getenv (1 samples, 0.01%)</title><rect x="0.0000%" y="277" width="0.0121%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 0.01%)</title><rect x="0.0000%" y="261" width="0.0121%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="271.50"></text></g><g><title>wcc-5705e778ccbf84ad`&lt;criterion::Criterion as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="0.0121%" y="213" width="0.0121%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.2621%" y="223.50"></text></g><g><title>wcc-5705e778ccbf84ad`criterion::html::Html::new (1 samples, 0.01%)</title><rect x="0.0121%" y="197" width="0.0121%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.2621%" y="207.50"></text></g><g><title>wcc-5705e778ccbf84ad`&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.01%)</title><rect x="0.0121%" y="181" width="0.0121%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.2621%" y="191.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.01%)</title><rect x="0.0242%" y="181" width="0.0121%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="0.2742%" y="191.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::gen_noise_single_2d (2 samples, 0.02%)</title><rect x="0.0483%" y="165" width="0.0242%" height="15" fill="rgb(228,23,34)" fg:x="4" fg:w="2"/><text x="0.2983%" y="175.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::gen_noise_single_3d (4 samples, 0.05%)</title><rect x="0.0725%" y="165" width="0.0483%" height="15" fill="rgb(218,30,26)" fg:x="6" fg:w="4"/><text x="0.3225%" y="175.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::get_noise_3d (3 samples, 0.04%)</title><rect x="0.1209%" y="165" width="0.0363%" height="15" fill="rgb(220,122,19)" fg:x="10" fg:w="3"/><text x="0.3709%" y="175.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with (48 samples, 0.58%)</title><rect x="0.1571%" y="165" width="0.5801%" height="15" fill="rgb(250,228,42)" fg:x="13" fg:w="48"/><text x="0.4071%" y="175.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with::_{{closure}} (17 samples, 0.21%)</title><rect x="0.7372%" y="165" width="0.2055%" height="15" fill="rgb(240,193,28)" fg:x="61" fg:w="17"/><text x="0.9872%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.01%)</title><rect x="0.9427%" y="149" width="0.0121%" height="15" fill="rgb(216,20,37)" fg:x="78" fg:w="1"/><text x="1.1927%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`DYLD-STUB$$memcmp (2 samples, 0.02%)</title><rect x="0.9548%" y="149" width="0.0242%" height="15" fill="rgb(206,188,39)" fg:x="79" fg:w="2"/><text x="1.2048%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::gen_noise_single_2d (28 samples, 0.34%)</title><rect x="0.9790%" y="149" width="0.3384%" height="15" fill="rgb(217,207,13)" fg:x="81" fg:w="28"/><text x="1.2290%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::gen_noise_single_3d (61 samples, 0.74%)</title><rect x="1.3174%" y="149" width="0.7372%" height="15" fill="rgb(231,73,38)" fg:x="109" fg:w="61"/><text x="1.5674%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::get_noise_2d (22 samples, 0.27%)</title><rect x="2.0546%" y="149" width="0.2659%" height="15" fill="rgb(225,20,46)" fg:x="170" fg:w="22"/><text x="2.3046%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::get_noise_3d (3 samples, 0.04%)</title><rect x="2.3205%" y="149" width="0.0363%" height="15" fill="rgb(210,31,41)" fg:x="192" fg:w="3"/><text x="2.5705%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_blocks::registry::BlockRegistry::id_by_name (5 samples, 0.06%)</title><rect x="2.3568%" y="149" width="0.0604%" height="15" fill="rgb(221,200,47)" fg:x="195" fg:w="5"/><text x="2.6068%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`core::hash::BuildHasher::hash_one (5 samples, 0.06%)</title><rect x="2.3568%" y="133" width="0.0604%" height="15" fill="rgb(226,26,5)" fg:x="195" fg:w="5"/><text x="2.6068%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="2.4051%" y="117" width="0.0121%" height="15" fill="rgb(249,33,26)" fg:x="199" fg:w="1"/><text x="2.6551%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::gen_noise_single_2d (201 samples, 2.43%)</title><rect x="4.4839%" y="133" width="2.4293%" height="15" fill="rgb(235,183,28)" fg:x="371" fg:w="201"/><text x="4.7339%" y="143.50">wc..</text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::get_noise_2d (36 samples, 0.44%)</title><rect x="6.9132%" y="133" width="0.4351%" height="15" fill="rgb(221,5,38)" fg:x="572" fg:w="36"/><text x="7.1632%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_chunk::generate_chunk_buffer (610 samples, 7.37%)</title><rect x="0.0363%" y="181" width="7.3725%" height="15" fill="rgb(247,18,42)" fg:x="3" fg:w="610"/><text x="0.2863%" y="191.50">wcc-5705e7..</text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with (535 samples, 6.47%)</title><rect x="0.9427%" y="165" width="6.4660%" height="15" fill="rgb(241,131,45)" fg:x="78" fg:w="535"/><text x="1.1927%" y="175.50">wcc-5705..</text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with::_{{closure}} (413 samples, 4.99%)</title><rect x="2.4172%" y="149" width="4.9915%" height="15" fill="rgb(249,31,29)" fg:x="200" fg:w="413"/><text x="2.6672%" y="159.50">wcc-57..</text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with::_{{closure}} (5 samples, 0.06%)</title><rect x="7.3483%" y="133" width="0.0604%" height="15" fill="rgb(225,111,53)" fg:x="608" fg:w="5"/><text x="7.5983%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (124 samples, 1.50%)</title><rect x="7.4692%" y="165" width="1.4987%" height="15" fill="rgb(238,160,17)" fg:x="618" fg:w="124"/><text x="7.7192%" y="175.50"></text></g><g><title>wcc-5705e778ccbf84ad`core::ptr::drop_in_place&lt;geist_mesh_cpu::wcc::FaceGrids&gt; (1 samples, 0.01%)</title><rect x="8.9679%" y="165" width="0.0121%" height="15" fill="rgb(214,148,48)" fg:x="742" fg:w="1"/><text x="9.2179%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="8.9679%" y="149" width="0.0121%" height="15" fill="rgb(232,36,49)" fg:x="742" fg:w="1"/><text x="9.2179%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`mvm_madvise_free_plat (1 samples, 0.01%)</title><rect x="8.9679%" y="133" width="0.0121%" height="15" fill="rgb(209,103,24)" fg:x="742" fg:w="1"/><text x="9.2179%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="8.9679%" y="117" width="0.0121%" height="15" fill="rgb(229,88,8)" fg:x="742" fg:w="1"/><text x="9.2179%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.05%)</title><rect x="85.3396%" y="149" width="0.0483%" height="15" fill="rgb(213,181,19)" fg:x="7061" fg:w="4"/><text x="85.5896%" y="159.50"></text></g><g><title>libsystem_platform.dylib`__bzero (4 samples, 0.05%)</title><rect x="85.3396%" y="133" width="0.0483%" height="15" fill="rgb(254,191,54)" fg:x="7061" fg:w="4"/><text x="85.5896%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (162 samples, 1.96%)</title><rect x="85.3880%" y="149" width="1.9579%" height="15" fill="rgb(241,83,37)" fg:x="7065" fg:w="162"/><text x="85.6380%" y="159.50">l..</text></g><g><title>wcc-5705e778ccbf84ad`&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.01%)</title><rect x="87.3459%" y="149" width="0.0121%" height="15" fill="rgb(233,36,39)" fg:x="7227" fg:w="1"/><text x="87.5959%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="87.3459%" y="133" width="0.0121%" height="15" fill="rgb(226,3,54)" fg:x="7227" fg:w="1"/><text x="87.5959%" y="143.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.01%)</title><rect x="87.3459%" y="117" width="0.0121%" height="15" fill="rgb(245,192,40)" fg:x="7227" fg:w="1"/><text x="87.5959%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (11 samples, 0.13%)</title><rect x="87.3580%" y="69" width="0.1329%" height="15" fill="rgb(238,167,29)" fg:x="7228" fg:w="11"/><text x="87.6080%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (11 samples, 0.13%)</title><rect x="87.3580%" y="53" width="0.1329%" height="15" fill="rgb(232,182,51)" fg:x="7228" fg:w="11"/><text x="87.6080%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (11 samples, 0.13%)</title><rect x="87.3580%" y="37" width="0.1329%" height="15" fill="rgb(231,60,39)" fg:x="7228" fg:w="11"/><text x="87.6080%" y="47.50"></text></g><g><title>wcc-5705e778ccbf84ad`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::grow (12 samples, 0.15%)</title><rect x="87.3580%" y="149" width="0.1450%" height="15" fill="rgb(208,69,12)" fg:x="7228" fg:w="12"/><text x="87.6080%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (12 samples, 0.15%)</title><rect x="87.3580%" y="133" width="0.1450%" height="15" fill="rgb(235,93,37)" fg:x="7228" fg:w="12"/><text x="87.6080%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`alloc::raw_vec::finish_grow (12 samples, 0.15%)</title><rect x="87.3580%" y="117" width="0.1450%" height="15" fill="rgb(213,116,39)" fg:x="7228" fg:w="12"/><text x="87.6080%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (12 samples, 0.15%)</title><rect x="87.3580%" y="101" width="0.1450%" height="15" fill="rgb(222,207,29)" fg:x="7228" fg:w="12"/><text x="87.6080%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (12 samples, 0.15%)</title><rect x="87.3580%" y="85" width="0.1450%" height="15" fill="rgb(206,96,30)" fg:x="7228" fg:w="12"/><text x="87.6080%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="87.4909%" y="69" width="0.0121%" height="15" fill="rgb(218,138,4)" fg:x="7239" fg:w="1"/><text x="87.7409%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.02%)</title><rect x="87.5030%" y="117" width="0.0242%" height="15" fill="rgb(250,191,14)" fg:x="7240" fg:w="2"/><text x="87.7530%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`core::ptr::drop_in_place&lt;geist_lighting::micro::compute_light_with_borders_buf_micro::DialQ&gt; (98 samples, 1.18%)</title><rect x="87.5030%" y="149" width="1.1844%" height="15" fill="rgb(239,60,40)" fg:x="7240" fg:w="98"/><text x="87.7530%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (98 samples, 1.18%)</title><rect x="87.5030%" y="133" width="1.1844%" height="15" fill="rgb(206,27,48)" fg:x="7240" fg:w="98"/><text x="87.7530%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_large (96 samples, 1.16%)</title><rect x="87.5272%" y="117" width="1.1603%" height="15" fill="rgb(225,35,8)" fg:x="7242" fg:w="96"/><text x="87.7772%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_plat (96 samples, 1.16%)</title><rect x="87.5272%" y="101" width="1.1603%" height="15" fill="rgb(250,213,24)" fg:x="7242" fg:w="96"/><text x="87.7772%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (96 samples, 1.16%)</title><rect x="87.5272%" y="85" width="1.1603%" height="15" fill="rgb(247,123,22)" fg:x="7242" fg:w="96"/><text x="87.7772%" y="95.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_lighting::micro::compute_light_with_borders_buf_micro (6,596 samples, 79.72%)</title><rect x="8.9799%" y="165" width="79.7196%" height="15" fill="rgb(231,138,38)" fg:x="743" fg:w="6596"/><text x="9.2299%" y="175.50">wcc-5705e778ccbf84ad`geist_lighting::micro::compute_light_with_borders_buf_micro</text></g><g><title>wcc-5705e778ccbf84ad`geist_lighting::LightGrid::new (1 samples, 0.01%)</title><rect x="88.6875%" y="149" width="0.0121%" height="15" fill="rgb(231,145,46)" fg:x="7338" fg:w="1"/><text x="88.9375%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="88.6875%" y="133" width="0.0121%" height="15" fill="rgb(251,118,11)" fg:x="7338" fg:w="1"/><text x="88.9375%" y="143.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.01%)</title><rect x="88.6875%" y="117" width="0.0121%" height="15" fill="rgb(217,147,25)" fg:x="7338" fg:w="1"/><text x="88.9375%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_lighting::LightGrid::sample_face_local_s2 (2 samples, 0.02%)</title><rect x="88.6995%" y="149" width="0.0242%" height="15" fill="rgb(247,81,37)" fg:x="7339" fg:w="2"/><text x="88.9495%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::WccMesher::toggle_x (2 samples, 0.02%)</title><rect x="88.7237%" y="149" width="0.0242%" height="15" fill="rgb(209,12,38)" fg:x="7341" fg:w="2"/><text x="88.9737%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::KeyTable::ensure (2 samples, 0.02%)</title><rect x="88.7237%" y="133" width="0.0242%" height="15" fill="rgb(227,1,9)" fg:x="7341" fg:w="2"/><text x="88.9737%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`core::hash::BuildHasher::hash_one (2 samples, 0.02%)</title><rect x="88.7237%" y="117" width="0.0242%" height="15" fill="rgb(248,47,43)" fg:x="7341" fg:w="2"/><text x="88.9737%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="88.7600%" y="133" width="0.0121%" height="15" fill="rgb(221,10,30)" fg:x="7344" fg:w="1"/><text x="89.0100%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::WccMesher::toggle_y (3 samples, 0.04%)</title><rect x="88.7479%" y="149" width="0.0363%" height="15" fill="rgb(210,229,1)" fg:x="7343" fg:w="3"/><text x="88.9979%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::KeyTable::ensure (1 samples, 0.01%)</title><rect x="88.7721%" y="133" width="0.0121%" height="15" fill="rgb(222,148,37)" fg:x="7345" fg:w="1"/><text x="89.0221%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::WccMesher::add_cube (8 samples, 0.10%)</title><rect x="88.6995%" y="165" width="0.0967%" height="15" fill="rgb(234,67,33)" fg:x="7339" fg:w="8"/><text x="88.9495%" y="175.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::WccMesher::toggle_z (1 samples, 0.01%)</title><rect x="88.7841%" y="149" width="0.0121%" height="15" fill="rgb(247,98,35)" fg:x="7346" fg:w="1"/><text x="89.0341%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_free (2 samples, 0.02%)</title><rect x="88.8446%" y="133" width="0.0242%" height="15" fill="rgb(247,138,52)" fg:x="7351" fg:w="2"/><text x="89.0946%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="88.8687%" y="133" width="0.0121%" height="15" fill="rgb(213,79,30)" fg:x="7353" fg:w="1"/><text x="89.1187%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="88.8808%" y="133" width="0.0242%" height="15" fill="rgb(246,177,23)" fg:x="7354" fg:w="2"/><text x="89.1308%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`DYLD-STUB$$free (1 samples, 0.01%)</title><rect x="88.9050%" y="133" width="0.0121%" height="15" fill="rgb(230,62,27)" fg:x="7356" fg:w="1"/><text x="89.1550%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`core::ptr::drop_in_place&lt;geist_world::worldgen::WorldGenParams&gt; (15 samples, 0.18%)</title><rect x="88.9171%" y="133" width="0.1813%" height="15" fill="rgb(216,154,8)" fg:x="7357" fg:w="15"/><text x="89.1671%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (14 samples, 0.17%)</title><rect x="88.9292%" y="117" width="0.1692%" height="15" fill="rgb(244,35,45)" fg:x="7358" fg:w="14"/><text x="89.1792%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with::_{{closure}} (1 samples, 0.01%)</title><rect x="89.0984%" y="133" width="0.0121%" height="15" fill="rgb(251,115,12)" fg:x="7372" fg:w="1"/><text x="89.3484%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::gen_noise_single_2d (3 samples, 0.04%)</title><rect x="89.1105%" y="117" width="0.0363%" height="15" fill="rgb(240,54,50)" fg:x="7373" fg:w="3"/><text x="89.3605%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::get_noise_2d (1 samples, 0.01%)</title><rect x="89.1467%" y="117" width="0.0121%" height="15" fill="rgb(233,84,52)" fg:x="7376" fg:w="1"/><text x="89.3967%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_blocks::registry::BlockRegistry::id_by_name (1 samples, 0.01%)</title><rect x="89.1588%" y="117" width="0.0121%" height="15" fill="rgb(207,117,47)" fg:x="7377" fg:w="1"/><text x="89.4088%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="89.1588%" y="101" width="0.0121%" height="15" fill="rgb(249,43,39)" fg:x="7377" fg:w="1"/><text x="89.4088%" y="111.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with (6 samples, 0.07%)</title><rect x="89.1105%" y="133" width="0.0725%" height="15" fill="rgb(209,38,44)" fg:x="7373" fg:w="6"/><text x="89.3605%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with::_{{closure}} (1 samples, 0.01%)</title><rect x="89.1709%" y="117" width="0.0121%" height="15" fill="rgb(236,212,23)" fg:x="7378" fg:w="1"/><text x="89.4209%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.02%)</title><rect x="89.2192%" y="101" width="0.0242%" height="15" fill="rgb(242,79,21)" fg:x="7382" fg:w="2"/><text x="89.4692%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="89.2434%" y="101" width="0.0121%" height="15" fill="rgb(211,96,35)" fg:x="7384" fg:w="1"/><text x="89.4934%" y="111.50"></text></g><g><title>wcc-5705e778ccbf84ad`&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="89.2555%" y="101" width="0.0725%" height="15" fill="rgb(253,215,40)" fg:x="7385" fg:w="6"/><text x="89.5055%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (5 samples, 0.06%)</title><rect x="89.2676%" y="85" width="0.0604%" height="15" fill="rgb(211,81,21)" fg:x="7386" fg:w="5"/><text x="89.5176%" y="95.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime (42 samples, 0.51%)</title><rect x="88.8325%" y="149" width="0.5076%" height="15" fill="rgb(208,190,38)" fg:x="7350" fg:w="42"/><text x="89.0825%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::make_gen_ctx (13 samples, 0.16%)</title><rect x="89.1830%" y="133" width="0.1571%" height="15" fill="rgb(235,213,38)" fg:x="7379" fg:w="13"/><text x="89.4330%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`&lt;geist_world::worldgen::WorldGenParams as core::clone::Clone&gt;::clone (11 samples, 0.13%)</title><rect x="89.2072%" y="117" width="0.1329%" height="15" fill="rgb(237,122,38)" fg:x="7381" fg:w="11"/><text x="89.4572%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="89.3280%" y="101" width="0.0121%" height="15" fill="rgb(244,218,35)" fg:x="7391" fg:w="1"/><text x="89.5780%" y="111.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with (2 samples, 0.02%)</title><rect x="89.3401%" y="149" width="0.0242%" height="15" fill="rgb(240,68,47)" fg:x="7392" fg:w="2"/><text x="89.5901%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::WccMesher::add_water_cube (48 samples, 0.58%)</title><rect x="88.7962%" y="165" width="0.5801%" height="15" fill="rgb(210,16,53)" fg:x="7347" fg:w="48"/><text x="89.0462%" y="175.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::make_gen_ctx (1 samples, 0.01%)</title><rect x="89.3643%" y="149" width="0.0121%" height="15" fill="rgb(235,124,12)" fg:x="7394" fg:w="1"/><text x="89.6143%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::WccMesher::emit_into (80 samples, 0.97%)</title><rect x="89.3764%" y="165" width="0.9669%" height="15" fill="rgb(224,169,11)" fg:x="7395" fg:w="80"/><text x="89.6264%" y="175.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::emit::emit_face_rect_for_clipped (2 samples, 0.02%)</title><rect x="90.3191%" y="149" width="0.0242%" height="15" fill="rgb(250,166,2)" fg:x="7473" fg:w="2"/><text x="90.5691%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::mesh_build::MeshBuild::add_face_rect (2 samples, 0.02%)</title><rect x="90.3191%" y="133" width="0.0242%" height="15" fill="rgb(242,216,29)" fg:x="7473" fg:w="2"/><text x="90.5691%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::mesh_build::MeshBuild::add_quad (2 samples, 0.02%)</title><rect x="90.3191%" y="117" width="0.0242%" height="15" fill="rgb(230,116,27)" fg:x="7473" fg:w="2"/><text x="90.5691%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="90.3312%" y="101" width="0.0121%" height="15" fill="rgb(228,99,48)" fg:x="7474" fg:w="1"/><text x="90.5812%" y="111.50"></text></g><g><title>wcc-5705e778ccbf84ad`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="90.3312%" y="85" width="0.0121%" height="15" fill="rgb(253,11,6)" fg:x="7474" fg:w="1"/><text x="90.5812%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.01%)</title><rect x="90.3312%" y="69" width="0.0121%" height="15" fill="rgb(247,143,39)" fg:x="7474" fg:w="1"/><text x="90.5812%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.01%)</title><rect x="90.3312%" y="53" width="0.0121%" height="15" fill="rgb(236,97,10)" fg:x="7474" fg:w="1"/><text x="90.5812%" y="63.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="90.3312%" y="37" width="0.0121%" height="15" fill="rgb(233,208,19)" fg:x="7474" fg:w="1"/><text x="90.5812%" y="47.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::WccMesher::new (4 samples, 0.05%)</title><rect x="90.3432%" y="165" width="0.0483%" height="15" fill="rgb(216,164,2)" fg:x="7475" fg:w="4"/><text x="90.5932%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.05%)</title><rect x="90.3432%" y="149" width="0.0483%" height="15" fill="rgb(220,129,5)" fg:x="7475" fg:w="4"/><text x="90.5932%" y="159.50"></text></g><g><title>libsystem_platform.dylib`__bzero (4 samples, 0.05%)</title><rect x="90.3432%" y="133" width="0.0483%" height="15" fill="rgb(242,17,10)" fg:x="7475" fg:w="4"/><text x="90.5932%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="90.4158%" y="117" width="0.0242%" height="15" fill="rgb(242,107,0)" fg:x="7481" fg:w="2"/><text x="90.6658%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`core::ptr::drop_in_place&lt;geist_world::worldgen::WorldGenParams&gt; (3 samples, 0.04%)</title><rect x="90.4158%" y="133" width="0.0363%" height="15" fill="rgb(251,28,31)" fg:x="7481" fg:w="3"/><text x="90.6658%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;geist_world::worldgen::FeatureRule&gt;&gt; (1 samples, 0.01%)</title><rect x="90.4399%" y="117" width="0.0121%" height="15" fill="rgb(233,223,10)" fg:x="7483" fg:w="1"/><text x="90.6899%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with (4 samples, 0.05%)</title><rect x="90.4520%" y="133" width="0.0483%" height="15" fill="rgb(215,21,27)" fg:x="7484" fg:w="4"/><text x="90.7020%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with::_{{closure}} (1 samples, 0.01%)</title><rect x="90.5004%" y="133" width="0.0121%" height="15" fill="rgb(232,23,21)" fg:x="7488" fg:w="1"/><text x="90.7504%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::gen_noise_single_2d (3 samples, 0.04%)</title><rect x="90.5124%" y="117" width="0.0363%" height="15" fill="rgb(244,5,23)" fg:x="7489" fg:w="3"/><text x="90.7624%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::gen_noise_single_3d (4 samples, 0.05%)</title><rect x="90.5487%" y="117" width="0.0483%" height="15" fill="rgb(226,81,46)" fg:x="7492" fg:w="4"/><text x="90.7987%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::get_noise_3d (1 samples, 0.01%)</title><rect x="90.5971%" y="117" width="0.0121%" height="15" fill="rgb(247,70,30)" fg:x="7496" fg:w="1"/><text x="90.8471%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_blocks::registry::BlockRegistry::id_by_name (1 samples, 0.01%)</title><rect x="90.6091%" y="117" width="0.0121%" height="15" fill="rgb(212,68,19)" fg:x="7497" fg:w="1"/><text x="90.8591%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="90.6091%" y="101" width="0.0121%" height="15" fill="rgb(240,187,13)" fg:x="7497" fg:w="1"/><text x="90.8591%" y="111.50"></text></g><g><title>wcc-5705e778ccbf84ad`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="90.6091%" y="85" width="0.0121%" height="15" fill="rgb(223,113,26)" fg:x="7497" fg:w="1"/><text x="90.8591%" y="95.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::gen_noise_single_2d (13 samples, 0.16%)</title><rect x="90.7542%" y="101" width="0.1571%" height="15" fill="rgb(206,192,2)" fg:x="7509" fg:w="13"/><text x="91.0042%" y="111.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with (34 samples, 0.41%)</title><rect x="90.5124%" y="133" width="0.4109%" height="15" fill="rgb(241,108,4)" fg:x="7489" fg:w="34"/><text x="90.7624%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with::_{{closure}} (25 samples, 0.30%)</title><rect x="90.6212%" y="117" width="0.3022%" height="15" fill="rgb(247,173,49)" fg:x="7498" fg:w="25"/><text x="90.8712%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::get_noise_2d (1 samples, 0.01%)</title><rect x="90.9113%" y="101" width="0.0121%" height="15" fill="rgb(224,114,35)" fg:x="7522" fg:w="1"/><text x="91.1613%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="90.9234%" y="101" width="0.0121%" height="15" fill="rgb(245,159,27)" fg:x="7523" fg:w="1"/><text x="91.1734%" y="111.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::build::build_chunk_wcc_cpu_buf (6,912 samples, 83.54%)</title><rect x="7.4088%" y="181" width="83.5388%" height="15" fill="rgb(245,172,44)" fg:x="613" fg:w="6912"/><text x="7.6588%" y="191.50">wcc-5705e778ccbf84ad`geist_mesh_cpu::build::build_chunk_wcc_cpu_buf</text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::WccMesher::seed_neighbor_seams (46 samples, 0.56%)</title><rect x="90.3916%" y="165" width="0.5560%" height="15" fill="rgb(236,23,11)" fg:x="7479" fg:w="46"/><text x="90.6416%" y="175.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime (45 samples, 0.54%)</title><rect x="90.4037%" y="149" width="0.5439%" height="15" fill="rgb(205,117,38)" fg:x="7480" fg:w="45"/><text x="90.6537%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::make_gen_ctx (2 samples, 0.02%)</title><rect x="90.9234%" y="133" width="0.0242%" height="15" fill="rgb(237,72,25)" fg:x="7523" fg:w="2"/><text x="91.1734%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`&lt;geist_world::worldgen::WorldGenParams as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="90.9234%" y="117" width="0.0242%" height="15" fill="rgb(244,70,9)" fg:x="7523" fg:w="2"/><text x="91.1734%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="90.9355%" y="101" width="0.0121%" height="15" fill="rgb(217,125,39)" fg:x="7524" fg:w="1"/><text x="91.1855%" y="111.50"></text></g><g><title>wcc-5705e778ccbf84ad`&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench (7,524 samples, 90.94%)</title><rect x="0.0242%" y="213" width="90.9355%" height="15" fill="rgb(235,36,10)" fg:x="2" fg:w="7524"/><text x="0.2742%" y="223.50">wcc-5705e778ccbf84ad`&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench</text></g><g><title>wcc-5705e778ccbf84ad`criterion::bencher::Bencher&lt;M&gt;::iter (7,524 samples, 90.94%)</title><rect x="0.0242%" y="197" width="90.9355%" height="15" fill="rgb(251,123,47)" fg:x="2" fg:w="7524"/><text x="0.2742%" y="207.50">wcc-5705e778ccbf84ad`criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with (1 samples, 0.01%)</title><rect x="90.9475%" y="181" width="0.0121%" height="15" fill="rgb(221,13,13)" fg:x="7525" fg:w="1"/><text x="91.1975%" y="191.50"></text></g><g><title>wcc-5705e778ccbf84ad`core::ptr::drop_in_place&lt;geist_blocks::registry::BlockRegistry&gt; (1 samples, 0.01%)</title><rect x="90.9596%" y="213" width="0.0121%" height="15" fill="rgb(238,131,9)" fg:x="7526" fg:w="1"/><text x="91.2096%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="90.9596%" y="197" width="0.0121%" height="15" fill="rgb(211,50,8)" fg:x="7526" fg:w="1"/><text x="91.2096%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`mvm_madvise_free_plat (1 samples, 0.01%)</title><rect x="90.9596%" y="181" width="0.0121%" height="15" fill="rgb(245,182,24)" fg:x="7526" fg:w="1"/><text x="91.2096%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="90.9596%" y="165" width="0.0121%" height="15" fill="rgb(242,14,37)" fg:x="7526" fg:w="1"/><text x="91.2096%" y="175.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.01%)</title><rect x="90.9717%" y="165" width="0.0121%" height="15" fill="rgb(246,228,12)" fg:x="7527" fg:w="1"/><text x="91.2217%" y="175.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::gen_noise_single_3d (6 samples, 0.07%)</title><rect x="90.9838%" y="149" width="0.0725%" height="15" fill="rgb(213,55,15)" fg:x="7528" fg:w="6"/><text x="91.2338%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::get_noise_2d (1 samples, 0.01%)</title><rect x="91.0563%" y="149" width="0.0121%" height="15" fill="rgb(209,9,3)" fg:x="7534" fg:w="1"/><text x="91.3063%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::get_noise_3d (3 samples, 0.04%)</title><rect x="91.0684%" y="149" width="0.0363%" height="15" fill="rgb(230,59,30)" fg:x="7535" fg:w="3"/><text x="91.3184%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_blocks::registry::BlockRegistry::id_by_name (2 samples, 0.02%)</title><rect x="91.1047%" y="149" width="0.0242%" height="15" fill="rgb(209,121,21)" fg:x="7538" fg:w="2"/><text x="91.3547%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with (19 samples, 0.23%)</title><rect x="91.1288%" y="149" width="0.2296%" height="15" fill="rgb(220,109,13)" fg:x="7540" fg:w="19"/><text x="91.3788%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with::_{{closure}} (6 samples, 0.07%)</title><rect x="91.3585%" y="149" width="0.0725%" height="15" fill="rgb(232,18,1)" fg:x="7559" fg:w="6"/><text x="91.6085%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::gen_noise_single_2d (11 samples, 0.13%)</title><rect x="91.4310%" y="133" width="0.1329%" height="15" fill="rgb(215,41,42)" fg:x="7565" fg:w="11"/><text x="91.6810%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::gen_noise_single_3d (45 samples, 0.54%)</title><rect x="91.5639%" y="133" width="0.5439%" height="15" fill="rgb(224,123,36)" fg:x="7576" fg:w="45"/><text x="91.8139%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::get_noise_2d (4 samples, 0.05%)</title><rect x="92.1078%" y="133" width="0.0483%" height="15" fill="rgb(240,125,3)" fg:x="7621" fg:w="4"/><text x="92.3578%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::get_noise_3d (6 samples, 0.07%)</title><rect x="92.1562%" y="133" width="0.0725%" height="15" fill="rgb(205,98,50)" fg:x="7625" fg:w="6"/><text x="92.4062%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_blocks::registry::BlockRegistry::id_by_name (7 samples, 0.08%)</title><rect x="92.2287%" y="133" width="0.0846%" height="15" fill="rgb(205,185,37)" fg:x="7631" fg:w="7"/><text x="92.4787%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`core::hash::BuildHasher::hash_one (7 samples, 0.08%)</title><rect x="92.2287%" y="117" width="0.0846%" height="15" fill="rgb(238,207,15)" fg:x="7631" fg:w="7"/><text x="92.4787%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="92.2891%" y="101" width="0.0242%" height="15" fill="rgb(213,199,42)" fg:x="7636" fg:w="2"/><text x="92.5391%" y="111.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::gen_noise_single_2d (59 samples, 0.71%)</title><rect x="93.1714%" y="117" width="0.7131%" height="15" fill="rgb(235,201,11)" fg:x="7709" fg:w="59"/><text x="93.4214%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::get_noise_2d (13 samples, 0.16%)</title><rect x="93.8845%" y="117" width="0.1571%" height="15" fill="rgb(207,46,11)" fg:x="7768" fg:w="13"/><text x="94.1345%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_chunk::generate_chunk_buffer (258 samples, 3.12%)</title><rect x="90.9838%" y="165" width="3.1182%" height="15" fill="rgb(241,35,35)" fg:x="7528" fg:w="258"/><text x="91.2338%" y="175.50">wcc..</text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with (221 samples, 2.67%)</title><rect x="91.4310%" y="149" width="2.6710%" height="15" fill="rgb(243,32,47)" fg:x="7565" fg:w="221"/><text x="91.6810%" y="159.50">wc..</text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with::_{{closure}} (148 samples, 1.79%)</title><rect x="92.3133%" y="133" width="1.7887%" height="15" fill="rgb(247,202,23)" fg:x="7638" fg:w="148"/><text x="92.5633%" y="143.50">w..</text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with::_{{closure}} (5 samples, 0.06%)</title><rect x="94.0416%" y="117" width="0.0604%" height="15" fill="rgb(219,102,11)" fg:x="7781" fg:w="5"/><text x="94.2916%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_blocks::registry::BlockRegistry::id_by_name (3 samples, 0.04%)</title><rect x="94.1262%" y="149" width="0.0363%" height="15" fill="rgb(243,110,44)" fg:x="7788" fg:w="3"/><text x="94.3762%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="94.1504%" y="133" width="0.0121%" height="15" fill="rgb(222,74,54)" fg:x="7790" fg:w="1"/><text x="94.4004%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="94.1504%" y="117" width="0.0121%" height="15" fill="rgb(216,99,12)" fg:x="7790" fg:w="1"/><text x="94.4004%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_blocks::registry::BlockRegistry::id_by_name (9 samples, 0.11%)</title><rect x="94.1987%" y="133" width="0.1088%" height="15" fill="rgb(226,22,26)" fg:x="7794" fg:w="9"/><text x="94.4487%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`core::hash::BuildHasher::hash_one (9 samples, 0.11%)</title><rect x="94.1987%" y="117" width="0.1088%" height="15" fill="rgb(217,163,10)" fg:x="7794" fg:w="9"/><text x="94.4487%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.07%)</title><rect x="94.2350%" y="101" width="0.0725%" height="15" fill="rgb(213,25,53)" fg:x="7797" fg:w="6"/><text x="94.4850%" y="111.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_lighting::LightGrid::compute_with_borders_buf (20 samples, 0.24%)</title><rect x="94.1020%" y="165" width="0.2417%" height="15" fill="rgb(252,105,26)" fg:x="7786" fg:w="20"/><text x="94.3520%" y="175.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_lighting::LightGrid::compute_with_borders_buf::_{{closure}} (15 samples, 0.18%)</title><rect x="94.1624%" y="149" width="0.1813%" height="15" fill="rgb(220,39,43)" fg:x="7791" fg:w="15"/><text x="94.4124%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_lighting::can_cross_face_s2 (3 samples, 0.04%)</title><rect x="94.3075%" y="133" width="0.0363%" height="15" fill="rgb(229,68,48)" fg:x="7803" fg:w="3"/><text x="94.5575%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_blocks::micro::micro_face_cell_open_s2 (1 samples, 0.01%)</title><rect x="94.3316%" y="117" width="0.0121%" height="15" fill="rgb(252,8,32)" fg:x="7805" fg:w="1"/><text x="94.5816%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_lighting::LightGrid::sample_face_local_s2 (5 samples, 0.06%)</title><rect x="94.3437%" y="165" width="0.0604%" height="15" fill="rgb(223,20,43)" fg:x="7806" fg:w="5"/><text x="94.5937%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="94.4162%" y="149" width="0.0121%" height="15" fill="rgb(229,81,49)" fg:x="7812" fg:w="1"/><text x="94.6662%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`mvm_madvise_free_plat (1 samples, 0.01%)</title><rect x="94.4162%" y="133" width="0.0121%" height="15" fill="rgb(236,28,36)" fg:x="7812" fg:w="1"/><text x="94.6662%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="94.4162%" y="117" width="0.0121%" height="15" fill="rgb(249,185,26)" fg:x="7812" fg:w="1"/><text x="94.6662%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_lighting::micro::compute_light_with_borders_buf_micro (9 samples, 0.11%)</title><rect x="94.4283%" y="149" width="0.1088%" height="15" fill="rgb(249,174,33)" fg:x="7813" fg:w="9"/><text x="94.6783%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_lighting::LightGrid::sample_face_local_s2 (7 samples, 0.08%)</title><rect x="94.5371%" y="133" width="0.0846%" height="15" fill="rgb(233,201,37)" fg:x="7822" fg:w="7"/><text x="94.7871%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::KeyTable::ensure (1 samples, 0.01%)</title><rect x="94.6217%" y="133" width="0.0121%" height="15" fill="rgb(221,78,26)" fg:x="7829" fg:w="1"/><text x="94.8717%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`core::hash::BuildHasher::hash_one (2 samples, 0.02%)</title><rect x="94.6580%" y="101" width="0.0242%" height="15" fill="rgb(250,127,30)" fg:x="7832" fg:w="2"/><text x="94.9080%" y="111.50"></text></g><g><title>wcc-5705e778ccbf84ad`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="94.6701%" y="85" width="0.0121%" height="15" fill="rgb(230,49,44)" fg:x="7833" fg:w="1"/><text x="94.9201%" y="95.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::WccMesher::toggle_x (5 samples, 0.06%)</title><rect x="94.6338%" y="133" width="0.0604%" height="15" fill="rgb(229,67,23)" fg:x="7830" fg:w="5"/><text x="94.8838%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::KeyTable::ensure (5 samples, 0.06%)</title><rect x="94.6338%" y="117" width="0.0604%" height="15" fill="rgb(249,83,47)" fg:x="7830" fg:w="5"/><text x="94.8838%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="94.6821%" y="101" width="0.0121%" height="15" fill="rgb(215,43,3)" fg:x="7834" fg:w="1"/><text x="94.9321%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.01%)</title><rect x="94.6821%" y="85" width="0.0121%" height="15" fill="rgb(238,154,13)" fg:x="7834" fg:w="1"/><text x="94.9321%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.01%)</title><rect x="94.6821%" y="69" width="0.0121%" height="15" fill="rgb(219,56,2)" fg:x="7834" fg:w="1"/><text x="94.9321%" y="79.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::WccMesher::toggle_y (2 samples, 0.02%)</title><rect x="94.6942%" y="133" width="0.0242%" height="15" fill="rgb(233,0,4)" fg:x="7835" fg:w="2"/><text x="94.9442%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::KeyTable::ensure (1 samples, 0.01%)</title><rect x="94.7063%" y="117" width="0.0121%" height="15" fill="rgb(235,30,7)" fg:x="7836" fg:w="1"/><text x="94.9563%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::WccMesher::add_cube (20 samples, 0.24%)</title><rect x="94.5371%" y="149" width="0.2417%" height="15" fill="rgb(250,79,13)" fg:x="7822" fg:w="20"/><text x="94.7871%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::WccMesher::toggle_z (5 samples, 0.06%)</title><rect x="94.7184%" y="133" width="0.0604%" height="15" fill="rgb(211,146,34)" fg:x="7837" fg:w="5"/><text x="94.9684%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::KeyTable::ensure (1 samples, 0.01%)</title><rect x="94.7667%" y="117" width="0.0121%" height="15" fill="rgb(228,22,38)" fg:x="7841" fg:w="1"/><text x="95.0167%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::WccMesher::add_water_cube (1 samples, 0.01%)</title><rect x="94.7788%" y="149" width="0.0121%" height="15" fill="rgb(235,168,5)" fg:x="7842" fg:w="1"/><text x="95.0288%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime (1 samples, 0.01%)</title><rect x="94.7788%" y="133" width="0.0121%" height="15" fill="rgb(221,155,16)" fg:x="7842" fg:w="1"/><text x="95.0288%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`core::ptr::drop_in_place&lt;geist_world::worldgen::WorldGenParams&gt; (1 samples, 0.01%)</title><rect x="94.7788%" y="117" width="0.0121%" height="15" fill="rgb(215,215,53)" fg:x="7842" fg:w="1"/><text x="95.0288%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="94.7788%" y="101" width="0.0121%" height="15" fill="rgb(223,4,10)" fg:x="7842" fg:w="1"/><text x="95.0288%" y="111.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::WccMesher::emit_into (21 samples, 0.25%)</title><rect x="94.7909%" y="149" width="0.2538%" height="15" fill="rgb(234,103,6)" fg:x="7843" fg:w="21"/><text x="95.0409%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::emit::emit_face_rect_for_clipped (1 samples, 0.01%)</title><rect x="95.0326%" y="133" width="0.0121%" height="15" fill="rgb(227,97,0)" fg:x="7863" fg:w="1"/><text x="95.2826%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::mesh_build::MeshBuild::add_face_rect (1 samples, 0.01%)</title><rect x="95.0326%" y="117" width="0.0121%" height="15" fill="rgb(234,150,53)" fg:x="7863" fg:w="1"/><text x="95.2826%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::mesh_build::MeshBuild::add_quad (1 samples, 0.01%)</title><rect x="95.0326%" y="101" width="0.0121%" height="15" fill="rgb(228,201,54)" fg:x="7863" fg:w="1"/><text x="95.2826%" y="111.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::WccMesher::new (1 samples, 0.01%)</title><rect x="95.0447%" y="149" width="0.0121%" height="15" fill="rgb(222,22,37)" fg:x="7864" fg:w="1"/><text x="95.2947%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="95.0447%" y="133" width="0.0121%" height="15" fill="rgb(237,53,32)" fg:x="7864" fg:w="1"/><text x="95.2947%" y="143.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.01%)</title><rect x="95.0447%" y="117" width="0.0121%" height="15" fill="rgb(233,25,53)" fg:x="7864" fg:w="1"/><text x="95.2947%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::get_noise_2d (1 samples, 0.01%)</title><rect x="95.0568%" y="117" width="0.0121%" height="15" fill="rgb(210,40,34)" fg:x="7865" fg:w="1"/><text x="95.3068%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::get_noise_3d (1 samples, 0.01%)</title><rect x="95.0689%" y="117" width="0.0121%" height="15" fill="rgb(241,220,44)" fg:x="7866" fg:w="1"/><text x="95.3189%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::gen_noise_single_3d (2 samples, 0.02%)</title><rect x="95.0810%" y="101" width="0.0242%" height="15" fill="rgb(235,28,35)" fg:x="7867" fg:w="2"/><text x="95.3310%" y="111.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::gen_noise_single_2d (1 samples, 0.01%)</title><rect x="95.1535%" y="85" width="0.0121%" height="15" fill="rgb(210,56,17)" fg:x="7873" fg:w="1"/><text x="95.4035%" y="95.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with (8 samples, 0.10%)</title><rect x="95.0810%" y="117" width="0.0967%" height="15" fill="rgb(224,130,29)" fg:x="7867" fg:w="8"/><text x="95.3310%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with::_{{closure}} (6 samples, 0.07%)</title><rect x="95.1051%" y="101" width="0.0725%" height="15" fill="rgb(235,212,8)" fg:x="7869" fg:w="6"/><text x="95.3551%" y="111.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with::_{{closure}} (1 samples, 0.01%)</title><rect x="95.1656%" y="85" width="0.0121%" height="15" fill="rgb(223,33,50)" fg:x="7874" fg:w="1"/><text x="95.4156%" y="95.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::build::build_chunk_wcc_cpu_buf (66 samples, 0.80%)</title><rect x="94.4042%" y="165" width="0.7977%" height="15" fill="rgb(219,149,13)" fg:x="7811" fg:w="66"/><text x="94.6542%" y="175.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::WccMesher::seed_neighbor_seams (12 samples, 0.15%)</title><rect x="95.0568%" y="149" width="0.1450%" height="15" fill="rgb(250,156,29)" fg:x="7865" fg:w="12"/><text x="95.3068%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime (12 samples, 0.15%)</title><rect x="95.0568%" y="133" width="0.1450%" height="15" fill="rgb(216,193,19)" fg:x="7865" fg:w="12"/><text x="95.3068%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::make_gen_ctx (2 samples, 0.02%)</title><rect x="95.1777%" y="117" width="0.0242%" height="15" fill="rgb(216,135,14)" fg:x="7875" fg:w="2"/><text x="95.4277%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`&lt;geist_world::worldgen::WorldGenParams as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="95.1777%" y="101" width="0.0242%" height="15" fill="rgb(241,47,5)" fg:x="7875" fg:w="2"/><text x="95.4277%" y="111.50"></text></g><g><title>wcc-5705e778ccbf84ad`&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="95.1898%" y="85" width="0.0121%" height="15" fill="rgb(233,42,35)" fg:x="7876" fg:w="1"/><text x="95.4398%" y="95.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_lighting::LightGrid::sample_face_local_s2 (13 samples, 0.16%)</title><rect x="95.2502%" y="149" width="0.1571%" height="15" fill="rgb(231,13,6)" fg:x="7881" fg:w="13"/><text x="95.5002%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::KeyTable::ensure (1 samples, 0.01%)</title><rect x="95.4073%" y="149" width="0.0121%" height="15" fill="rgb(207,181,40)" fg:x="7894" fg:w="1"/><text x="95.6573%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`core::hash::BuildHasher::hash_one (2 samples, 0.02%)</title><rect x="95.4315%" y="133" width="0.0242%" height="15" fill="rgb(254,173,49)" fg:x="7896" fg:w="2"/><text x="95.6815%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::WccMesher::toggle_x (9 samples, 0.11%)</title><rect x="95.4194%" y="149" width="0.1088%" height="15" fill="rgb(221,1,38)" fg:x="7895" fg:w="9"/><text x="95.6694%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::KeyTable::ensure (6 samples, 0.07%)</title><rect x="95.4556%" y="133" width="0.0725%" height="15" fill="rgb(206,124,46)" fg:x="7898" fg:w="6"/><text x="95.7056%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`core::hash::BuildHasher::hash_one (2 samples, 0.02%)</title><rect x="95.5040%" y="117" width="0.0242%" height="15" fill="rgb(249,21,11)" fg:x="7902" fg:w="2"/><text x="95.7540%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="95.5161%" y="101" width="0.0121%" height="15" fill="rgb(222,201,40)" fg:x="7903" fg:w="1"/><text x="95.7661%" y="111.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::WccMesher::toggle_y (15 samples, 0.18%)</title><rect x="95.5282%" y="149" width="0.1813%" height="15" fill="rgb(235,61,29)" fg:x="7904" fg:w="15"/><text x="95.7782%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::KeyTable::ensure (6 samples, 0.07%)</title><rect x="95.6369%" y="133" width="0.0725%" height="15" fill="rgb(219,207,3)" fg:x="7913" fg:w="6"/><text x="95.8869%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`core::hash::BuildHasher::hash_one (4 samples, 0.05%)</title><rect x="95.6611%" y="117" width="0.0483%" height="15" fill="rgb(222,56,46)" fg:x="7915" fg:w="4"/><text x="95.9111%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="95.6732%" y="101" width="0.0363%" height="15" fill="rgb(239,76,54)" fg:x="7916" fg:w="3"/><text x="95.9232%" y="111.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::WccMesher::add_cube (56 samples, 0.68%)</title><rect x="95.2018%" y="165" width="0.6768%" height="15" fill="rgb(231,124,27)" fg:x="7877" fg:w="56"/><text x="95.4518%" y="175.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::WccMesher::toggle_z (14 samples, 0.17%)</title><rect x="95.7095%" y="149" width="0.1692%" height="15" fill="rgb(249,195,6)" fg:x="7919" fg:w="14"/><text x="95.9595%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::KeyTable::ensure (7 samples, 0.08%)</title><rect x="95.7941%" y="133" width="0.0846%" height="15" fill="rgb(237,174,47)" fg:x="7926" fg:w="7"/><text x="96.0441%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`core::hash::BuildHasher::hash_one (6 samples, 0.07%)</title><rect x="95.8061%" y="117" width="0.0725%" height="15" fill="rgb(206,201,31)" fg:x="7927" fg:w="6"/><text x="96.0561%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="95.8545%" y="101" width="0.0242%" height="15" fill="rgb(231,57,52)" fg:x="7931" fg:w="2"/><text x="96.1045%" y="111.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::WccMesher::add_water_cube (1 samples, 0.01%)</title><rect x="95.8787%" y="165" width="0.0121%" height="15" fill="rgb(248,177,22)" fg:x="7933" fg:w="1"/><text x="96.1287%" y="175.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime (1 samples, 0.01%)</title><rect x="95.8787%" y="149" width="0.0121%" height="15" fill="rgb(215,211,37)" fg:x="7933" fg:w="1"/><text x="96.1287%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with (1 samples, 0.01%)</title><rect x="95.8787%" y="133" width="0.0121%" height="15" fill="rgb(241,128,51)" fg:x="7933" fg:w="1"/><text x="96.1287%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with::_{{closure}} (1 samples, 0.01%)</title><rect x="95.8787%" y="117" width="0.0121%" height="15" fill="rgb(227,165,31)" fg:x="7933" fg:w="1"/><text x="96.1287%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::gen_noise_single_2d (1 samples, 0.01%)</title><rect x="95.8787%" y="101" width="0.0121%" height="15" fill="rgb(228,167,24)" fg:x="7933" fg:w="1"/><text x="96.1287%" y="111.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::WccMesher::emit_into (25 samples, 0.30%)</title><rect x="95.8907%" y="165" width="0.3022%" height="15" fill="rgb(228,143,12)" fg:x="7934" fg:w="25"/><text x="96.1407%" y="175.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::emit::emit_face_rect_for_clipped (3 samples, 0.04%)</title><rect x="96.1566%" y="149" width="0.0363%" height="15" fill="rgb(249,149,8)" fg:x="7956" fg:w="3"/><text x="96.4066%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::mesh_build::MeshBuild::add_face_rect (3 samples, 0.04%)</title><rect x="96.1566%" y="133" width="0.0363%" height="15" fill="rgb(243,35,44)" fg:x="7956" fg:w="3"/><text x="96.4066%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::mesh_build::MeshBuild::add_quad (3 samples, 0.04%)</title><rect x="96.1566%" y="117" width="0.0363%" height="15" fill="rgb(246,89,9)" fg:x="7956" fg:w="3"/><text x="96.4066%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::WccMesher::new (1 samples, 0.01%)</title><rect x="96.1929%" y="165" width="0.0121%" height="15" fill="rgb(233,213,13)" fg:x="7959" fg:w="1"/><text x="96.4429%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="96.1929%" y="149" width="0.0121%" height="15" fill="rgb(233,141,41)" fg:x="7959" fg:w="1"/><text x="96.4429%" y="159.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.01%)</title><rect x="96.1929%" y="133" width="0.0121%" height="15" fill="rgb(239,167,4)" fg:x="7959" fg:w="1"/><text x="96.4429%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="96.2171%" y="133" width="0.0121%" height="15" fill="rgb(209,217,16)" fg:x="7961" fg:w="1"/><text x="96.4671%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with (2 samples, 0.02%)</title><rect x="96.2292%" y="133" width="0.0242%" height="15" fill="rgb(219,88,35)" fg:x="7962" fg:w="2"/><text x="96.4792%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with::_{{closure}} (1 samples, 0.01%)</title><rect x="96.2533%" y="133" width="0.0121%" height="15" fill="rgb(220,193,23)" fg:x="7964" fg:w="1"/><text x="96.5033%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::gen_noise_single_3d (2 samples, 0.02%)</title><rect x="96.2654%" y="117" width="0.0242%" height="15" fill="rgb(230,90,52)" fg:x="7965" fg:w="2"/><text x="96.5154%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with (6 samples, 0.07%)</title><rect x="96.2654%" y="133" width="0.0725%" height="15" fill="rgb(252,106,19)" fg:x="7965" fg:w="6"/><text x="96.5154%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with::_{{closure}} (4 samples, 0.05%)</title><rect x="96.2896%" y="117" width="0.0483%" height="15" fill="rgb(206,74,20)" fg:x="7967" fg:w="4"/><text x="96.5396%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::gen_noise_single_2d (3 samples, 0.04%)</title><rect x="96.3017%" y="101" width="0.0363%" height="15" fill="rgb(230,138,44)" fg:x="7968" fg:w="3"/><text x="96.5517%" y="111.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_mesh_cpu::wcc::WccMesher::seed_neighbor_seams (12 samples, 0.15%)</title><rect x="96.2050%" y="165" width="0.1450%" height="15" fill="rgb(235,182,43)" fg:x="7960" fg:w="12"/><text x="96.4550%" y="175.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime (11 samples, 0.13%)</title><rect x="96.2171%" y="149" width="0.1329%" height="15" fill="rgb(242,16,51)" fg:x="7961" fg:w="11"/><text x="96.4671%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::make_gen_ctx (1 samples, 0.01%)</title><rect x="96.3379%" y="133" width="0.0121%" height="15" fill="rgb(248,9,4)" fg:x="7971" fg:w="1"/><text x="96.5879%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`&lt;geist_world::worldgen::WorldGenParams as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="96.3379%" y="117" width="0.0121%" height="15" fill="rgb(210,31,22)" fg:x="7971" fg:w="1"/><text x="96.5879%" y="127.50"></text></g><g><title>wcc-5705e778ccbf84ad`&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="96.3379%" y="101" width="0.0121%" height="15" fill="rgb(239,54,39)" fg:x="7971" fg:w="1"/><text x="96.5879%" y="111.50"></text></g><g><title>wcc-5705e778ccbf84ad`&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench (448 samples, 5.41%)</title><rect x="90.9717%" y="197" width="5.4146%" height="15" fill="rgb(230,99,41)" fg:x="7527" fg:w="448"/><text x="91.2217%" y="207.50">wcc-570..</text></g><g><title>wcc-5705e778ccbf84ad`criterion::bencher::Bencher&lt;M&gt;::iter (448 samples, 5.41%)</title><rect x="90.9717%" y="181" width="5.4146%" height="15" fill="rgb(253,106,12)" fg:x="7527" fg:w="448"/><text x="91.2217%" y="191.50">wcc-570..</text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with (3 samples, 0.04%)</title><rect x="96.3500%" y="165" width="0.0363%" height="15" fill="rgb(213,46,41)" fg:x="7972" fg:w="3"/><text x="96.6000%" y="175.50"></text></g><g><title>wcc-5705e778ccbf84ad`core::ptr::drop_in_place&lt;geist_blocks::registry::BlockRegistry&gt; (1 samples, 0.01%)</title><rect x="96.3863%" y="197" width="0.0121%" height="15" fill="rgb(215,133,35)" fg:x="7975" fg:w="1"/><text x="96.6363%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="96.3863%" y="181" width="0.0121%" height="15" fill="rgb(213,28,5)" fg:x="7975" fg:w="1"/><text x="96.6363%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`mvm_madvise_free_plat (1 samples, 0.01%)</title><rect x="96.3863%" y="165" width="0.0121%" height="15" fill="rgb(215,77,49)" fg:x="7975" fg:w="1"/><text x="96.6363%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="96.3863%" y="149" width="0.0121%" height="15" fill="rgb(248,100,22)" fg:x="7975" fg:w="1"/><text x="96.6363%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::gen_noise_single_3d (11 samples, 0.13%)</title><rect x="96.4104%" y="181" width="0.1329%" height="15" fill="rgb(208,67,9)" fg:x="7977" fg:w="11"/><text x="96.6604%" y="191.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::get_noise_2d (2 samples, 0.02%)</title><rect x="96.5434%" y="181" width="0.0242%" height="15" fill="rgb(219,133,21)" fg:x="7988" fg:w="2"/><text x="96.7934%" y="191.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::get_noise_3d (3 samples, 0.04%)</title><rect x="96.5676%" y="181" width="0.0363%" height="15" fill="rgb(246,46,29)" fg:x="7990" fg:w="3"/><text x="96.8176%" y="191.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_blocks::registry::BlockRegistry::id_by_name (1 samples, 0.01%)</title><rect x="96.6038%" y="181" width="0.0121%" height="15" fill="rgb(246,185,52)" fg:x="7993" fg:w="1"/><text x="96.8538%" y="191.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with (23 samples, 0.28%)</title><rect x="96.6159%" y="181" width="0.2780%" height="15" fill="rgb(252,136,11)" fg:x="7994" fg:w="23"/><text x="96.8659%" y="191.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with::_{{closure}} (6 samples, 0.07%)</title><rect x="96.8939%" y="181" width="0.0725%" height="15" fill="rgb(219,138,53)" fg:x="8017" fg:w="6"/><text x="97.1439%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.01%)</title><rect x="96.9664%" y="165" width="0.0121%" height="15" fill="rgb(211,51,23)" fg:x="8023" fg:w="1"/><text x="97.2164%" y="175.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::gen_noise_single_2d (11 samples, 0.13%)</title><rect x="96.9785%" y="165" width="0.1329%" height="15" fill="rgb(247,221,28)" fg:x="8024" fg:w="11"/><text x="97.2285%" y="175.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::gen_noise_single_3d (40 samples, 0.48%)</title><rect x="97.1114%" y="165" width="0.4834%" height="15" fill="rgb(251,222,45)" fg:x="8035" fg:w="40"/><text x="97.3614%" y="175.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::get_noise_2d (7 samples, 0.08%)</title><rect x="97.5949%" y="165" width="0.0846%" height="15" fill="rgb(217,162,53)" fg:x="8075" fg:w="7"/><text x="97.8449%" y="175.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::get_noise_3d (5 samples, 0.06%)</title><rect x="97.6795%" y="165" width="0.0604%" height="15" fill="rgb(229,93,14)" fg:x="8082" fg:w="5"/><text x="97.9295%" y="175.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_blocks::registry::BlockRegistry::id_by_name (6 samples, 0.07%)</title><rect x="97.7399%" y="165" width="0.0725%" height="15" fill="rgb(209,67,49)" fg:x="8087" fg:w="6"/><text x="97.9899%" y="175.50"></text></g><g><title>wcc-5705e778ccbf84ad`core::hash::BuildHasher::hash_one (3 samples, 0.04%)</title><rect x="97.7762%" y="149" width="0.0363%" height="15" fill="rgb(213,87,29)" fg:x="8090" fg:w="3"/><text x="98.0262%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="97.8003%" y="133" width="0.0121%" height="15" fill="rgb(205,151,52)" fg:x="8092" fg:w="1"/><text x="98.0503%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::gen_noise_single_2d (56 samples, 0.68%)</title><rect x="98.6826%" y="149" width="0.6768%" height="15" fill="rgb(253,215,39)" fg:x="8165" fg:w="56"/><text x="98.9326%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`fastnoise_lite::FastNoiseLite::get_noise_2d (11 samples, 0.13%)</title><rect x="99.3594%" y="149" width="0.1329%" height="15" fill="rgb(221,220,41)" fg:x="8221" fg:w="11"/><text x="99.6094%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_chunk::generate_chunk_buffer (260 samples, 3.14%)</title><rect x="96.3984%" y="197" width="3.1424%" height="15" fill="rgb(218,133,21)" fg:x="7976" fg:w="260"/><text x="96.6484%" y="207.50">wcc..</text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with (213 samples, 2.57%)</title><rect x="96.9664%" y="181" width="2.5743%" height="15" fill="rgb(221,193,43)" fg:x="8023" fg:w="213"/><text x="97.2164%" y="191.50">wc..</text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with::_{{closure}} (143 samples, 1.73%)</title><rect x="97.8124%" y="165" width="1.7283%" height="15" fill="rgb(240,128,52)" fg:x="8093" fg:w="143"/><text x="98.0624%" y="175.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with::_{{closure}} (4 samples, 0.05%)</title><rect x="99.4924%" y="149" width="0.0483%" height="15" fill="rgb(253,114,12)" fg:x="8232" fg:w="4"/><text x="99.7424%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_lighting::LightGrid::compute_with_borders_buf (2 samples, 0.02%)</title><rect x="99.5407%" y="197" width="0.0242%" height="15" fill="rgb(215,223,47)" fg:x="8236" fg:w="2"/><text x="99.7907%" y="207.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_lighting::LightGrid::compute_with_borders_buf::_{{closure}} (1 samples, 0.01%)</title><rect x="99.5649%" y="197" width="0.0121%" height="15" fill="rgb(248,225,23)" fg:x="8238" fg:w="1"/><text x="99.8149%" y="207.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_blocks::registry::BlockRegistry::id_by_name (1 samples, 0.01%)</title><rect x="99.5770%" y="181" width="0.0121%" height="15" fill="rgb(250,108,0)" fg:x="8239" fg:w="1"/><text x="99.8270%" y="191.50"></text></g><g><title>wcc-5705e778ccbf84ad`core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="99.5770%" y="165" width="0.0121%" height="15" fill="rgb(228,208,7)" fg:x="8239" fg:w="1"/><text x="99.8270%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (2 samples, 0.02%)</title><rect x="99.6253%" y="165" width="0.0242%" height="15" fill="rgb(244,45,10)" fg:x="8243" fg:w="2"/><text x="99.8753%" y="175.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_blocks::registry::BlockRegistry::id_by_name (7 samples, 0.08%)</title><rect x="99.6495%" y="165" width="0.0846%" height="15" fill="rgb(207,125,25)" fg:x="8245" fg:w="7"/><text x="99.8995%" y="175.50"></text></g><g><title>wcc-5705e778ccbf84ad`core::hash::BuildHasher::hash_one (3 samples, 0.04%)</title><rect x="99.6978%" y="149" width="0.0363%" height="15" fill="rgb(210,195,18)" fg:x="8249" fg:w="3"/><text x="99.9478%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="99.6978%" y="133" width="0.0363%" height="15" fill="rgb(249,80,12)" fg:x="8249" fg:w="3"/><text x="99.9478%" y="143.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_lighting::LightGrid::compute_with_borders_buf (19 samples, 0.23%)</title><rect x="99.5770%" y="197" width="0.2296%" height="15" fill="rgb(221,65,9)" fg:x="8239" fg:w="19"/><text x="99.8270%" y="207.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_lighting::LightGrid::compute_with_borders_buf::_{{closure}} (18 samples, 0.22%)</title><rect x="99.5891%" y="181" width="0.2175%" height="15" fill="rgb(235,49,36)" fg:x="8240" fg:w="18"/><text x="99.8391%" y="191.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_lighting::can_cross_face_s2 (6 samples, 0.07%)</title><rect x="99.7341%" y="165" width="0.0725%" height="15" fill="rgb(225,32,20)" fg:x="8252" fg:w="6"/><text x="99.9841%" y="175.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_blocks::micro::micro_face_cell_open_s2 (5 samples, 0.06%)</title><rect x="99.7462%" y="149" width="0.0604%" height="15" fill="rgb(215,141,46)" fg:x="8253" fg:w="5"/><text x="99.9962%" y="159.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_world::voxel::World::block_at_runtime_with (2 samples, 0.02%)</title><rect x="99.8066%" y="197" width="0.0242%" height="15" fill="rgb(250,160,47)" fg:x="8258" fg:w="2"/><text x="100.0566%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="99.8308%" y="181" width="0.0121%" height="15" fill="rgb(216,222,40)" fg:x="8260" fg:w="1"/><text x="100.0808%" y="191.50"></text></g><g><title>wcc-5705e778ccbf84ad`core::ptr::drop_in_place&lt;geist_blocks::registry::BlockType&gt; (1 samples, 0.01%)</title><rect x="99.8429%" y="165" width="0.0121%" height="15" fill="rgb(234,217,39)" fg:x="8261" fg:w="1"/><text x="100.0929%" y="175.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_blocks::registry::BlockRegistry::from_configs (2 samples, 0.02%)</title><rect x="99.8429%" y="181" width="0.0242%" height="15" fill="rgb(207,178,40)" fg:x="8261" fg:w="2"/><text x="100.0929%" y="191.50"></text></g><g><title>wcc-5705e778ccbf84ad`geist_blocks::registry::BlockRegistry::from_configs::_{{closure}} (1 samples, 0.01%)</title><rect x="99.8550%" y="165" width="0.0121%" height="15" fill="rgb(221,136,13)" fg:x="8262" fg:w="1"/><text x="100.1050%" y="175.50"></text></g><g><title>dyld`start (8,264 samples, 99.88%)</title><rect x="0.0000%" y="309" width="99.8791%" height="15" fill="rgb(249,199,10)" fg:x="0" fg:w="8264"/><text x="0.2500%" y="319.50">dyld`start</text></g><g><title>wcc-5705e778ccbf84ad`main (8,263 samples, 99.87%)</title><rect x="0.0121%" y="293" width="99.8671%" height="15" fill="rgb(249,222,13)" fg:x="1" fg:w="8263"/><text x="0.2621%" y="303.50">wcc-5705e778ccbf84ad`main</text></g><g><title>wcc-5705e778ccbf84ad`std::rt::lang_start_internal (8,263 samples, 99.87%)</title><rect x="0.0121%" y="277" width="99.8671%" height="15" fill="rgb(244,185,38)" fg:x="1" fg:w="8263"/><text x="0.2621%" y="287.50">wcc-5705e778ccbf84ad`std::rt::lang_start_internal</text></g><g><title>wcc-5705e778ccbf84ad`std::rt::lang_start::_{{closure}} (8,263 samples, 99.87%)</title><rect x="0.0121%" y="261" width="99.8671%" height="15" fill="rgb(236,202,9)" fg:x="1" fg:w="8263"/><text x="0.2621%" y="271.50">wcc-5705e778ccbf84ad`std::rt::lang_start::_{{closure}}</text></g><g><title>wcc-5705e778ccbf84ad`std::sys::backtrace::__rust_begin_short_backtrace (8,263 samples, 99.87%)</title><rect x="0.0121%" y="245" width="99.8671%" height="15" fill="rgb(250,229,37)" fg:x="1" fg:w="8263"/><text x="0.2621%" y="255.50">wcc-5705e778ccbf84ad`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>wcc-5705e778ccbf84ad`wcc::main (8,263 samples, 99.87%)</title><rect x="0.0121%" y="229" width="99.8671%" height="15" fill="rgb(206,174,23)" fg:x="1" fg:w="8263"/><text x="0.2621%" y="239.50">wcc-5705e778ccbf84ad`wcc::main</text></g><g><title>wcc-5705e778ccbf84ad`wcc::benches (737 samples, 8.91%)</title><rect x="90.9717%" y="213" width="8.9074%" height="15" fill="rgb(211,33,43)" fg:x="7527" fg:w="737"/><text x="91.2217%" y="223.50">wcc-5705e778c..</text></g><g><title>wcc-5705e778ccbf84ad`wcc::load_registry (4 samples, 0.05%)</title><rect x="99.8308%" y="197" width="0.0483%" height="15" fill="rgb(245,58,50)" fg:x="8260" fg:w="4"/><text x="100.0808%" y="207.50"></text></g><g><title>wcc-5705e778ccbf84ad`toml_edit::parser::document::document::_{{closure}}::_{{closure}} (1 samples, 0.01%)</title><rect x="99.8671%" y="181" width="0.0121%" height="15" fill="rgb(244,68,36)" fg:x="8263" fg:w="1"/><text x="100.1171%" y="191.50"></text></g><g><title>wcc-5705e778ccbf84ad`toml_edit::parser::document::parse_keyval (1 samples, 0.01%)</title><rect x="99.8671%" y="165" width="0.0121%" height="15" fill="rgb(232,229,15)" fg:x="8263" fg:w="1"/><text x="100.1171%" y="175.50"></text></g><g><title>all (8,274 samples, 100%)</title><rect x="0.0000%" y="325" width="100.0000%" height="15" fill="rgb(254,30,23)" fg:x="0" fg:w="8274"/><text x="0.2500%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__exit (10 samples, 0.12%)</title><rect x="99.8791%" y="309" width="0.1209%" height="15" fill="rgb(235,160,14)" fg:x="8264" fg:w="10"/><text x="100.1291%" y="319.50"></text></g></svg></svg>